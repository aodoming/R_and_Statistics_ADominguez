# Load packages
library(ggplot2)
library(tidyverse)
library(stargazer)

> x <-3
options(prompt = "R> ")
x <- 3
x
x * x
x <-3
x <- 4
x * x
x <- 4
x <-3
x <- 4
x * x
numlist <- c(0,1,2,3,4,5,6,7,8,9)
ggplot(mtcars,aes(x=wt)) + geom_density()

install.packages("ggplot2")
install.packages("ggplot2")

ggplot(mtcars,aes(x=wt)) + geom_density()

#import used car dataset

setwd("~/Class_Folder_Berkeley/R")
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) 
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot

View(population_table)
View(population_table)

#compare sample versus population means
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) 

#randomly sample 50 data points
sample_table <- population_table %>% sample_n(50) 

plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot

t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))

#generate another 50 randomly
sample_table2 <- population_table %>% sample_n(50) 

#compare means of two samples
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) 


setwd("~/Class_Folder_Berkeley/R")
mtcars <- read.csv('mtcars.csv')
head(mtcars)

#import dataset into ggplot2
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) 
#create scatter plot
plt + geom_point() 

cor(mtcars$hp,mtcars$qsec)
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)

#import dataset into ggplot2
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) 
#create a scatter plot
plt + geom_point()

cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")])

#convert data frame into numeric matrix
cor(used_matrix)
#create linear model
model <- lm(hp ~ qsec,mtcars)
#determine y-axis values from linear model
yvals <- model$coefficients['qsec']*mtcars$qsec + model$coefficients['(Intercept)'] 

lm(hp ~ qsec,mtcars
lm(hp ~ qsec,mtcars)


#import dataset into ggplot2
plt <- ggplot(mtcars,aes(x=qsec,y=hp))
#plot scatter and linear model
plt + geom_point() + geom_line(aes(y=yvals), color = "red") 
lm(hp ~ mpg + disp + drat + wt + qsec,data=mtcars)


#import dataset into ggplot2
plt <- ggplot(population_table,aes(x=Miles_Driven,y=Selling_Price))
#create scatter plot
plt + geom_point()

cor(population_table$Miles_Driven,population_table$Selling_Price)
table(mpg$class,mpg$year)

#generate contingency table
tbl <- table(mpg$class,mpg$year) 
#compare categorical distributions
chisq.test(tbl)

#Load the file
setwd("~/Class_Folder_Berkeley/R")
#generate multiple linear regression model
lm(hp ~ mpg + disp + drat + wt + qsec,data=mtcars) 
lm(mpg ~ vehicle_length + vehicle_weight + ground_clearance + AWD,data=MechaCar_mpg)
head(MechaCar_mpg)

# Load in csv file
Mech_Cars <- read.csv('MechaCar_mpg', stringsAsFactors = F)
Mech_Cars <- read.csv('MechaCar_mpg.csv', stringsAsFactors = F)
lm(mpg ~ vehicle_length + vehicle_weight + ground_clearance + AWD,data=MechaCar_mpg)
lm(mpg ~ vehicle_length + vehicle_weight + ground_clearance + AWD,data=Mech_Cars)
View(Mech_Cars)
View(Mech_Cars)
lm(mpg ~ vehicle.length + vehicle.weight + ground.clearance + AWD,data=Mech_Cars)
summary(lm(mpg ~ vehicle.length + vehicle.weight + ground.clearance + AWD,data=Mech_Cars))

# Load in File
setwd("~/Class_Folder_Berkeley/Class_Activity_Files/M15_Activities_Unsolved/B2-Stu_Sardines")
sardines <-read.csv(sardines.csv, stringsAsFactors = F)

library(tidyverse)
hair <- read.csv('hair.csv', stringsAsFactors = F)
View(hair)
View(hair)

#Compare means across multiple levels
# ANOVA
aov(HairColour ~ Pain,data=hair)
#filter columns from mtcars dataset
hair_filt <- hair[,c("HairColour","Pain")] 
#convert numeric column to factor
hair_filt$Pain <- factor(hair_filt$Pain) 


setwd("~/Class_Folder_Berkeley/R/Resources")
#filter columns from Suspension_coil dataset
suspen_filt <- suspen_filt[,c("VehicleID","Manufacturing.Lot", "PSI")]
#convert numeric column to factor
suspen_filt$PSI <- factor(suspen_filt$PSI)
suspen_data <- read.csv('Suspension_COil.csv')
suspen_data <- read.csv('Suspension_COil.csv', stringsAsFactors = F)
suspen_data <- read.csv('Suspension_Coil.csv', stringsAsFactors = F)


setwd("~/Class_Folder_Berkeley/R")
suspen_data <- read.csv('Suspension_Coil.csv', stringsAsFactors = F)
View(suspen_data)
suspen_filt <- suspen_filt[,c("VehicleID","Manufacturing.Lot", "PSI")]
#convert numeric column to factor
suspen_filt$PSI <- factor(suspen_filt$PSI)
suspen_filt <- suspen_data[,c("VehicleID","Manufacturing.Lot", "PSI")]

suspen_filt <- suspen_data[,c("VehicleID", "PSI")]
suspen_filt$PSI <- factor(suspen_filt$PSI)
View(suspen_filt)
View(suspen_filt)
View(suspen_filt)
aov(VehicleID ~ PSI,data=suspen_filt)
View(Mech_Cars)
View(Mech_Cars)

#compare means across multiple levels
aov(VehicleID ~ PSI,data=suspen_data)
aov(PSI ~ VehicleID,data=suspen_filt)
